name: Publish multi-arch Docker images

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        base:
          [
            "debian:bullseye-20220527-slim",
            "debian:buster-20220527-slim",
            "ubuntu:jammy-20220531",
          ]
        sourceforge: ["Y", "N"]
        exclude:
          - base: "ubuntu:jammy-20220531"
            sourceforge: "Y"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Release Tag
        run: |
          declare -A sl_version_mapping

          sl_version_mapping[debian:buster-20220527-slim]=1.8
          sl_version_mapping[debian:bullseye-20220527-slim]=1.9.8
          sl_version_mapping[ubuntu:jammy-20220531]=1.9.9

          date=$(date '+%Y-%m-%d')
          base="$(cut -d ':' -f2 <<< '${{ matrix.base }}')"
          base="$(cut -d '-' -f1 <<< ${base})"
          squeezelite_version=""
          distro_id=${base}
          if [ "${{ matrix.sourceforge }}" = "Y" ];
              then squeezelite_version="squeezelite-1.9.9-sourceforge-";
          else
              version_from_dictionary=${sl_version_mapping[${{ matrix.base }}]}
              echo "Version from dictionary: "$version_from_dictionary" from ["${{ matrix.base }}"]"

              squeezelite_version="squeezelite-1.8-";
              if [ "${base}" = "bullseye" ];
                  then squeezelite_version="squeezelite-1.9.8-";
              fi
              if [ "${base}" = "jammy" ];
                  then squeezelite_version="squeezelite-1.9.9-";
              fi
          fi
          if [ "${base}" = "jammy" ];
              then distro_id="jammy";
          fi
          slug=${{secrets.DOCKER_USERNAME}}/squeezelite
          tags="$slug:${squeezelite_version}${distro_id},$slug:${squeezelite_version}${distro_id}-${date}"
          if [ "${base}" = "bullseye" ] && [ "${{ matrix.sourceforge }}" = "Y" ]; then
              tags="${tags},$slug:sourceforge-bullseye,$slug:latest";
          elif [ "${base}" = "buster" ] && [ "${{ matrix.sourceforge }}" = "Y" ]; then
              tags="${tags},$slug:sourceforge-buster";
          elif [ "${base}" = "buster" ] && [ "${{ matrix.sourceforge }}" = "N" ]; then
              tags="${tags},$slug:${distro_id},$slug:stable";
          elif [ "${base}" = "bullseye" ] && [ "${{ matrix.sourceforge }}" = "N" ]; then
              tags="${tags},$slug:${distro_id}";
          elif [ "${base}" = "jammy" ] && [ "${{ matrix.sourceforge }}" = "N" ]; then
              tags="${tags},$slug:${distro_id}";
          fi
          echo "RELEASE_TAGS=${tags}" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            BASE_IMAGE=${{ matrix.base }}
            DOWNLOAD_FROM_SOURCEFORGE=${{ matrix.sourceforge }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ env.RELEASE_TAGS }}
